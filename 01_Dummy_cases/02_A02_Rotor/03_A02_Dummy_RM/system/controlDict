/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     rhoSRFSimpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         0.5; //0.5

deltaT          1e-4; //1e-6

writeControl    timeStep;

writeInterval   10;

purgeWrite      10;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable true;

functions
{
    //Residuals
    //#includeFunc residuals
    Residuals
    {
	type            residuals;
	libs            ("libutilityFunctionObjects.so");

	writeControl    timeStep;
	writeInterval   1;

	fields (p Urel h);
	//fields (p Urel);    

    }

    TurbResiduals
    {
	type            residuals;
	libs            ("libutilityFunctionObjects.so");

	writeControl    timeStep;
	writeInterval   1;

	fields (k epsilon);  
    }


     

    YPlus-Value
    {
	type            yPlus;
	libs            ("libfieldFunctionObjects.so");

	executeControl  writeTime;
	writeControl    writeTime;
    }

    //Data
    MP3
    {
        type            surfaces;
        libs            ("libsampling.so");

        writeControl    writeTime;

        fields          (p U Urel k epsilon);

        surfaceFormat   vtk;
        interpolationScheme cellPoint;

        surfaces
        (
            Plane3
            {
                type            cuttingPlane;
                planeType 	pointAndNormal;
                point 		(0 0 0.11);
		normal 		(0 0 1);
                interpolate     yes;
            }
        );
    }
    MP4
    {
        type            surfaces;
        libs            ("libsampling.so");

        writeControl    writeTime;

        fields          (p U Urel k epsilon);

        surfaceFormat   vtk;
        interpolationScheme cellPoint;

        surfaces
        (
            Plane4
            {
            	type cuttingPlane;
		planeType pointAndNormal;
		point	  (0 0 0.228);
		normal    (0 0 1);
		interpolate yes;  
            }
        );
    }

    B2B-MidSpan
    {
        type            surfaces;
        libs            ("libsampling.so");

        writeControl    writeTime;

        fields          (p U Urel k epsilon);

		
        surfaceFormat   vtk;
        interpolationScheme cellPoint;

        surfaces
        (
            B2B
            {
            	type triSurfaceMesh;
		surface B2B.stl;
		source cells;
		radius	  (0 0 0.69);
		normal    (0 0 1);
		interpolate yes;  
            }
        );
    }


    maxPressure
    {
	type            volFieldValue;
	libs            ("libfieldFunctionObjects.so");

	writeControl    timeStep;
	writeInterval   1;

	writeFields     false;
	regionType      all;

	operation max;
        fields (p);
    }

    minPressure
    {
	type            volFieldValue;
	libs            ("libfieldFunctionObjects.so");

	writeControl    timeStep;
	writeInterval   1;

	writeFields     false;
	regionType      all;

	operation min;
        fields (p);
    }

    maxVelocity
    {
	type            volFieldValue;
	libs            ("libfieldFunctionObjects.so");

	writeControl    timeStep;
	writeInterval   1;

	writeFields     false;
	regionType      all;

	operation max;
        fields (U Urel);
    }

    axialVelocity
    {
	type            volFieldValue;
	libs            ("libfieldFunctionObjects.so");

	writeControl    timeStep;
	writeInterval   1;

	writeFields     false;
	regionType      all;

	operation max;
        fields (Urelz);
    }



}

// ************************************************************************* //
