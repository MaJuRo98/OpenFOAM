/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Note: this file is a Copy of $FOAM_TUTORIALS/resources/blockMesh/pitzDaily

convertToMeters 0.001;

myOffsetX 0;
myOffsetY 100;
myOffsetZ 0;


vertices
(
    (-50 50 0)
    (50 50 0)
    (50 150 0)
    (-50 150 0)
    (-50 50 150)
    (50 50 150)
    (50 150 150)
    (-50 150 150)

    (-50 50 150)
    (50 50 150)
    (50 150 150)
    (-50 150 150)
    (-50 50 300)
    (50 50 300)
    (50 150 300)
    (-50 150 300)


    (-50 50 300)
    (50 50 300)
    (50 150 300)
    (-50 150 300)
    (-50 50 450)
    (50 50 450)
    (50 150 450)
    (-50 150 450)
);


blocks
(
    hex (0 1 2 3 4 5 6 7) igv (30 30 10) simpleGrading (1 1 1)
    hex (8 9 10 11 12 13 14 15) rotor (30 30 10) simpleGrading (1 1 1)
    hex (16 17 18 19 20 21 22 23) stator (30 30 10) simpleGrading (1 1 1)

);

edges
    (
    );

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 1 2 3)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (20 21 22 23)
        );
    }
    walls_igv
    {
        type wall;
        faces
        (
            (2 6 7 3)
            (1 5 6 2)
            (0 4 5 1)
            (0 4 7 3)
        );
    }
    walls_rotor
    {
        type wall;
        faces
        (
            (11 15 14 10)
            (8 12 15 11)
            (9 13 12 8)
            (10 14 13 9)
        );
    }
    walls_stator
    {
        type wall;
        faces
        (
            (19 23 22 18)
            (16 20 23 19)
            (17 21 20 16)
            (18 22 21 17)
        );
    }

    nonCoupleIn1
    {
        type patch;
        inGroups (nonCouple);
        faces
        (
            (4 5 6 7)
        );
    }

    nonCoupleIn2
    {
        type patch;
        inGroups (nonCouple);
        faces
        (
            (8 9 10 11)
        );
    }
    nonCoupleOut1
    {
        type patch;
        inGroups (nonCouple);
        faces
        (
            (12 13 14 15)
        );
    }

    nonCoupleOut2
    {
        type patch;
        inGroups (nonCouple);
        faces
        (
            (16 17 18 19)
        );
    }
);

// ************************************************************************* //
